//ExercÃ­cio desenvolvido por mim

/*Convolutional Neural Network
Adapt the CNN example for MNIST digit classfication from Notebook 3A. Feel free to play around with the model architecture and see how the training time/performance changes, but to begin, try the following:

Image ->
convolution (32 3x3 filters) -> nonlinearity (ReLU) ->
convolution (32 3x3 filters) -> nonlinearity (ReLU) -> (2x2 max pool) ->
convolution (64 3x3 filters) -> nonlinearity (ReLU) ->
convolution (64 3x3 filters) -> nonlinearity (ReLU) -> (2x2 max pool) -> flatten -> fully connected (256 hidden units) -> nonlinearity (ReLU) ->
fully connected (10 hidden units) -> softmax

Note: The CNN model might take a while to train. Depending on your machine, you might expect this to take up to half an hour. If you see your validation performance start to plateau, you can kill the training.*/

